name: Publish Helm Charts

on:
  push:
    branches:
      - master
    paths:
      - "charts/**"

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git, Helm, and Publish Charts
        run: |
          #!/bin/bash
          set -euxo pipefail

          # --- Configuration ---
          CHART_DIR="charts"          # Directory where your Helm charts are located
          PACKAGED_CHARTS_DIR="packaged_charts" # Temporary directory for packaged charts
          GH_PAGES_DIR="packages"       # Directory where the gh-pages branch will be checked out
          REPO_URL="https://egovernments.github.io/urban-helm-charts" # Replace with your repo URL
          HELM_VERSION="3.13.3" # Or any specific version you want
          # --- End Configuration ---

          # --- Helper Functions ---
          create_gh_pages_if_not_exists() {
            git fetch origin
            if [[ $(git ls-remote --heads origin gh-pages) ]]; then
              echo "gh-pages branch exists"
            else
              echo "gh-pages branch does not exist, creating it"
              git checkout --orphan gh-pages
              git commit --allow-empty -m "Initial commit for gh-pages"
              git push origin gh-pages
            fi
          }
          # --- Main Script ---

          # 0. Checkout the code
          git clone --depth=0 $GITHUB_SERVER_URL/$GITHUB_REPOSITORY.git # Use the GitHub environment variable
          cd $GITHUB_WORKSPACE

          # 1. Set up Git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # 2. Set up Helm
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod +x get_helm.sh
          ./get_helm.sh -v "v$HELM_VERSION" #  Install specified helm version
          helm version

          # 3. Get changed charts
          CHANGED_CHARTS=$(git diff --name-only HEAD^ HEAD | grep "^$CHART_DIR/" | cut -d'/' -f2 | uniq)
          echo "Changed charts: $CHANGED_CHARTS"

          # 4. Package and copy charts
          mkdir -p "$PACKAGED_CHARTS_DIR"
          for chart in $CHANGED_CHARTS; do
            echo "Packaging chart: $CHART_DIR/$chart"
            CHART_VERSION=$(helm show chart "$CHART_DIR/$chart" | grep "version: " | awk '{print $2}') #getting the version from the Chart.yaml file
            echo "Chart Version: $CHART_VERSION"
            helm package "$CHART_DIR/$chart" -d "$PACKAGED_CHARTS_DIR"
          done

          # 5. Create gh-pages branch if it doesn't exist
          create_gh_pages_if_not_exists

          # 6. Checkout gh-pages
          git checkout gh-pages

          # 7. Copy Helm packages to packages directory
          mkdir -p "$GH_PAGES_DIR/packages"
          cp "$PACKAGED_CHARTS_DIR"/*.tgz "$GH_PAGES_DIR/packages/"

          # 8. Update index.yaml
          helm repo index "$GH_PAGES_DIR/packages" --url "$REPO_URL"

          # 9. Commit and push changes to gh-pages
          cd "$GH_PAGES_DIR"
          git add .
          git commit -m "Update Helm chart packages and index"
          git push origin gh-pages

          # 10. Delete the generated tgz files
          rm "$PACKAGED_CHARTS_DIR"/*.tgz

