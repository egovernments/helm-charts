name: Publish Helm Charts

on:
  push:
    branches:
      - master
    paths:
      - "charts/**"
  workflow_dispatch:  # Manual trigger support

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git, Helm, and Publish Charts
        run: |
          #!/bin/bash
          set -euxo pipefail

          # --- Configuration ---
          CHART_DIR="charts"
          PACKAGED_CHARTS_DIR="chart-packages"
          GH_PAGES_DIR="gh-pages"
          REPO_URL="https://egovernments.github.io/urban-helm-charts/packages"
          HELM_VERSION="3.13.3" # Or any specific version you want
          # --- End Configuration ---

          # --- Helper Functions ---
          create_gh_pages_if_not_exists() {
            git fetch origin
            if [[ $(git ls-remote --heads origin gh-pages) ]]; then
              echo "gh-pages branch exists"
            else
              echo "gh-pages branch does not exist, creating it"
              git checkout --orphan gh-pages
              git commit --allow-empty -m "Initial commit for gh-pages"
              git push origin gh-pages
            fi
          }
          # --- Main Script ---

          # 0. Checkout the code
          git clone --depth=0 $GITHUB_SERVER_URL/$GITHUB_REPOSITORY.git . # Clone to the current directory
          cd $GITHUB_WORKSPACE

          # 1. Set up Git
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

          # 2. Set up Helm
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod +x get_helm.sh
          ./get_helm.sh -v "v$HELM_VERSION"
          helm version

          # 3. Package Helm charts
          mkdir -p "$PACKAGED_CHARTS_DIR"
          for chart in "$CHART_DIR"/*/; do
            echo "Packaging chart: $chart"
            CHART_VERSION=$(helm show chart "$chart" | grep "version: " | awk '{print $2}')
            echo "Chart Version: $CHART_VERSION"
            helm package "$chart" --destination "$PACKAGED_CHARTS_DIR"
          done

          # 4. Generate index.yaml
          mkdir -p "$GH_PAGES_DIR/packages"
          helm repo index "$PACKAGED_CHARTS_DIR" --url "$REPO_URL"

          # 5. Push to gh-pages
          git checkout gh-pages #check out the gh-pages
          cp "$PACKAGED_CHARTS_DIR"/*.tgz "$GH_PAGES_DIR"/packages/
          cp "$PACKAGED_CHARTS_DIR"/index.yaml "$GH_PAGES_DIR"/packages/
          touch "$GH_PAGES_DIR"/.nojekyll
          cd "$GH_PAGES_DIR"
          git add .
          git commit -m "Update Helm chart packages and index" || echo "No changes to commit"
          git push origin gh-pages
          cd ..
          rm -rf "$GH_PAGES_DIR"
